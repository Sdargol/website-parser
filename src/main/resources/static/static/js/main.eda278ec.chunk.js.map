{"version":3,"sources":["components/allSiteInfoTable/AllSiteInfoTabje.jsx","api/parserSiteApi.js","components/detailSiteInfo/DetailSiteInfo.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","table","minWidth","AllSiteInfoTable","classes","useState","sitesInfo","setSitesInfo","useEffect","fetch","method","headers","then","response","json","data","catch","e","console","log","getAllSites","TableContainer","component","Paper","Table","className","size","aria-label","TableHead","style","backgroundColor","TableRow","TableCell","align","TableBody","map","s","id","Link","RouterLink","to","name","status","IconButton","onClick","preventDefault","theme","button","margin","spacing","c","display","justifyContent","header","alignItems","renderRow","props","index","Typography","variant","word","count","DetailSiteInfo","useParams","history","useHistory","siteInfo","setSiteInfo","getSiteInfo","Container","Box","mb","padding","hasOwnProperty","statistics","countWord","Button","color","startIcon","push","height","width","itemSize","itemCount","itemData","stats","headerSearch","App","url","setUrl","exact","path","TextField","onChange","event","target","value","label","site","body","JSON","stringify","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eda278ec.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { deleteSite, getAllSites } from '../../api/parserSiteApi';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nexport default function AllSiteInfoTable() {\r\n  const classes = useStyles();\r\n  const [sitesInfo, setSitesInfo] = useState([]);\r\n\r\n  useEffect(() => {\r\n      getAllSites(setSitesInfo);  \r\n  }, []);\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n        \r\n        <TableHead style = {{backgroundColor: \"#eee\"}}>\r\n          <TableRow>\r\n            <TableCell>id</TableCell>\r\n            <TableCell>url сайта</TableCell>\r\n            <TableCell align=\"right\">статус</TableCell>\r\n            <TableCell align=\"right\">удалить</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        \r\n        <TableBody>\r\n          {sitesInfo.map((s) => (\r\n            <TableRow key={s.id}>\r\n              <TableCell >{s.id}</TableCell>\r\n              \r\n              <TableCell >\r\n                <Link component={RouterLink} to={`/site/${s.id}`}>\r\n                {s.name}\r\n                </Link>\r\n              </TableCell>\r\n              \r\n              <TableCell align=\"right\">{s.status}</TableCell>\r\n              \r\n              <TableCell align=\"right\">\r\n                <IconButton aria-label=\"delete\" onClick = {(e) => {\r\n                  e.preventDefault();\r\n                  deleteSite(s.id);\r\n\r\n                }}>\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </TableCell>\r\n            \r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      \r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","const host = \"http://192.168.1.5:8080\"\r\n\r\nexport const getAllSites = (setSitesInfo) => {\r\n    fetch('/api/v1/parser',\r\n        {\r\n            method: \"GET\",\r\n            headers: { 'Content-Type': 'application/json;charset=utf-8' }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            setSitesInfo(data);\r\n        })\r\n        .catch(e => console.log(e));\r\n}\r\n\r\nexport const getSiteInfo = (id, setSiteInfo) => {\r\n    fetch(`/api/v1/parser/${id}`,\r\n        {\r\n            method: \"GET\",\r\n            headers: { 'Content-Type': 'application/json;charset=utf-8' }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            setSiteInfo(data);\r\n        })\r\n        .catch(e => console.log(e));\r\n}\r\n\r\nexport const deleteSite = (id) => {\r\n    fetch(`/api/v1/parser/${id}`,\r\n        {\r\n            method: \"DELETE\",\r\n            headers: { 'Content-Type': 'application/json;charset=utf-8' }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data);\r\n        })\r\n        .catch(e => console.log(e));\r\n}\r\n\r\n// {url : \"\"}\r\nexport const startParseSite = (site) => {\r\n    fetch(`/api/v1/parser`,\r\n        {\r\n            method: \"POST\",\r\n            headers: { 'Content-Type': 'application/json;charset=utf-8' },\r\n            body: JSON.stringify(site)\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data);\r\n        })\r\n        .catch(e => console.log(e));\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Box, Button, Container, Paper, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { getSiteInfo } from '../../api/parserSiteApi';\r\nimport { FixedSizeList } from 'react-window';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport './detailSiteInfoStyle.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    c: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\"\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\"\r\n    }\r\n}));\r\n\r\nfunction renderRow(props) {\r\n    const { index, style, data } = props;\r\n\r\n    return (\r\n        <div className=\"rowWordInfo\" key={index} style={style}>\r\n            <Typography variant=\"h6\">{data[index].word}</Typography>\r\n            <Typography variant=\"h6\">{data[index].count}</Typography>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function DetailSiteInfo() {\r\n    const classes = useStyles();\r\n    \r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n\r\n    const [siteInfo, setSiteInfo] = useState({});\r\n\r\n    useEffect(() => {\r\n        getSiteInfo(id, setSiteInfo);\r\n    }, [id]);\r\n\r\n    return (\r\n        <Container >\r\n            <Box mb={3}>\r\n                <Paper style={{ padding: '15px' }} className={classes.header}>\r\n                    <Typography variant=\"h5\">\r\n                        Сайт: {siteInfo.hasOwnProperty('statistics') ? siteInfo.name : id}\r\n                    </Typography>\r\n\r\n                    {siteInfo.hasOwnProperty('statistics') ? <Typography variant=\"body1\">Найдено слов: {siteInfo.statistics.countWord}</Typography> : false}\r\n                    \r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"default\"\r\n                        className={classes.button}\r\n                        startIcon={<ArrowBackIcon />}\r\n                        onClick={(e)=>{history.push(\"/\")}}\r\n                    >\r\n                        назад\r\n                    </Button>\r\n                </Paper>\r\n            </Box>\r\n\r\n            <div className={classes.c}>\r\n                {siteInfo.hasOwnProperty('statistics') ? <FixedSizeList height={400} width={300} itemSize={46} itemCount={siteInfo.statistics.countWord} itemData={siteInfo.statistics.stats}>\r\n                    {renderRow}\r\n                </FixedSizeList> : \"Грузим\"}\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\n","import React, { useState } from 'react';\nimport { Box, Button, Container, Paper, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport AllSiteInfoTable from './components/allSiteInfoTable/AllSiteInfoTabje';\nimport './App.css';\nimport { Route, Switch } from 'react-router';\nimport { BrowserRouter as Router} from \"react-router-dom\";\nimport DetailSiteInfo from './components/detailSiteInfo/DetailSiteInfo';\nimport TextField from '@material-ui/core/TextField';\nimport { startParseSite } from './api/parserSiteApi';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n  header: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: '15px'\n  },\n  headerSearch: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [url, setUrl] = useState(\"\");\n\n  const handleUrlInput = (event) => {\n    setUrl(event.target.value);\n  }\n\n  const handleStartParse = (event) => {\n    event.preventDefault();\n    startParseSite({url});\n  }\n  \n  return (\n    <Router>\n      \n      <Switch>\n\n        <Route exact path=\"/\"> {/* Отображаем короткую инфу о всех сайтах */}\n          <Container>\n\n            <Box mb={3}>\n              <Paper className={classes.header}>\n\n                <Typography variant=\"h5\">\n                  Website parser\n            </Typography>\n\n            <div className={classes.headerSearch}>\n              <TextField onChange={handleUrlInput} value={url} id=\"outlined-basic\" label=\"url\" size=\"small\" variant=\"outlined\" />\n\n              <Button\n                    variant=\"contained\"\n                    onClick={handleStartParse}\n                    color=\"default\"\n                    className={classes.button}\n                    startIcon={<CloudUploadIcon />}\n                  >\n                    start\n              </Button>\n            </div>\n\n              </Paper>\n            </Box>\n\n            <AllSiteInfoTable></AllSiteInfoTable>\n          </Container>\n        </Route> {/* ~Отображаем короткую инфу о всех сайтах */}\n\n        <Route exact path=\"/site/:id\"> {/* Отображаем подробную инфу о сайте */}\n          <DetailSiteInfo></DetailSiteInfo>\n          \n        </Route> {/* ~Отображаем подробную инфу о сайте */}\n     \n     </Switch>\n\n    </Router>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}